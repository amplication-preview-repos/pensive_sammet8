/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AboutPage as PrismaAboutPage } from "@prisma/client";

export class AboutPageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AboutPageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.aboutPage.count(args);
  }

  async aboutPages(
    args: Prisma.AboutPageFindManyArgs
  ): Promise<PrismaAboutPage[]> {
    return this.prisma.aboutPage.findMany(args);
  }
  async aboutPage(
    args: Prisma.AboutPageFindUniqueArgs
  ): Promise<PrismaAboutPage | null> {
    return this.prisma.aboutPage.findUnique(args);
  }
  async createAboutPage(
    args: Prisma.AboutPageCreateArgs
  ): Promise<PrismaAboutPage> {
    return this.prisma.aboutPage.create(args);
  }
  async updateAboutPage(
    args: Prisma.AboutPageUpdateArgs
  ): Promise<PrismaAboutPage> {
    return this.prisma.aboutPage.update(args);
  }
  async deleteAboutPage(
    args: Prisma.AboutPageDeleteArgs
  ): Promise<PrismaAboutPage> {
    return this.prisma.aboutPage.delete(args);
  }
}
